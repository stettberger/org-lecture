#!/usr/bin/python3

import sys
from lxml.html import parse
from lxml import etree
from pathlib import Path

def wrap(element, type, unwrap=False,**kwargs):
    parent = element.getparent()
    wrap = etree.Element(type)
    for k,v in kwargs.items():
        wrap.attrib[k] = v
    parent.replace(element, wrap)
    if unwrap:
        for child in element.getchildren():
            wrap.append(child)
    else:
        wrap.append(element)
    return wrap

fn = Path(sys.argv[1])
with open(fn, "rb") as fd:
    doc = parse(fd)

# Wrap Containers into Bootstrap
postamble = doc.find("//div[@id='postamble']")
content =  doc.find("//div[@id='content']")
if content is not None:
    container = wrap(content, 'div', unwrap=True, **{'class': 'col-md-9', 'id':'main-row'})
    if postamble is not None:
        container.append(postamble)
    container = wrap(container, 'div', **{'class': 'row'})
    container = wrap(container, 'div', **{'class': 'container'})

# Table of Contents
toc =  doc.find("//div[@id='table-of-contents']")
if toc is not None:
    toc.attrib['class'] = 'well'
    x = wrap(toc, 'div', **{'class': 'card bg-light mb-2 pb-1', 'id': 'toc-well'})

# Write out HTML File
fn.write_bytes(
    etree.tostring(doc)
)
# Write out IBR XML File
with open(Path(__file__).parent / 'html-postprocess.template.xml') as fd:
    template = parse(fd)

for dst, src in [('//title', '//title'),
                 ('//div[@id = "content"]', '//body/*')]:
    #now insert them
    dst = template.xpath(dst)[0]
    src = doc.xpath(src)
    if len(src) == 1:
        dst.getparent().replace(dst, src[0])
    else:
        for n in reversed(src):
            dst.insert(0, n)

fn.with_suffix(".xml").write_bytes(
    b'<?xml version="1.0"?><?xml-stylesheet type="text/xsl" href="/xsl/show.xsl"?>'
    + etree.tostring(template, doctype='')
)
